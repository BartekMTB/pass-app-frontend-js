{"version":3,"file":"static/js/983.f8c92180.chunk.js","mappings":"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","sources":["features/passes/PassFormGoods.jsx","features/passes/passesApiSlice.js","features/passes/EditPassForm.jsx","pages/EditPassPage.jsx","webpack://pass-app-frontend-js/./src/features/passes/PassForm.module.css?3a83","webpack://pass-app-frontend-js/./src/pages/NewPassPage.module.css?f7a1"],"sourcesContent":["import { useFieldArray, useFormContext } from \"react-hook-form\";\nimport css from \"./PassForm.module.css\";\n\nexport const PassFormGoods = () => {\n  const { register, formState } = useFormContext();\n  const { fields, append, remove } = useFieldArray({\n    name: \"goods\",\n  });\n\n  return (\n    <div>\n      {formState.errors.goods && <p>{formState.errors.goods.root?.message}</p>}\n      <ul>\n        {fields.map((field, index) => {\n          return (\n            <li key={field.id}>\n              <input\n                style={{ width: \"180px\" }}\n                {...register(`goods.${index}.goodsName`)}\n                placeholder=\"Products name\"\n              />\n\n              <select {...register(`goods.${index}.unit`)}>\n                <option value=\"\">Select unit</option>\n                <option value=\"KG\">KG</option>\n                <option value=\"L\">L</option>\n                <option value=\"M2\">M2</option>\n                <option value=\"M3\">M3</option>\n                <option value=\"SZT\">SZT</option>\n              </select>\n              <input\n                style={{ width: \"55px\" }}\n                className={css.formInputGoods}\n                {...register(`goods.${index}.quantity`)}\n                placeholder=\"Quantity\"\n              />\n              <input\n                style={{ width: \"210px\" }}\n                className={css.formInputGoods}\n                {...register(`goods.${index}.comments`)}\n                placeholder=\"Comment\"\n              />\n              <button\n                className={css.passBtn}\n                type=\"button\"\n                onClick={() => remove(index)}\n              >\n                Delete\n              </button>\n              {formState.errors.goods && (\n                <p>{formState.errors.goods[index]?.goodsName?.message}</p>\n              )}\n              {formState.errors.goods && (\n                <p>{formState.errors.goods[index]?.unit?.message}</p>\n              )}\n              {formState.errors.goods && (\n                <p>{formState.errors.goods[index]?.quantity?.message}</p>\n              )}\n              {formState.errors.goods && (\n                <p>{formState.errors.goods[index]?.comments?.message}</p>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n\n      <button\n        className={css.passBtn}\n        type=\"button\"\n        onClick={() => {\n          append({\n            name: \"append\",\n            amount: 0,\n          });\n        }}\n      >\n        add a line\n      </button>\n    </div>\n  );\n};\n/* {Array.isArray(formState.errors.goods) ? (\n  <span>{formState.errors.goods[index].goodaName?.message}</span>\n) : null} */\n","import { apiSlice } from \"../../app/apiSlice\";\n\nexport const passesApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    getPasses: builder.query({\n      query: (page = 1) => {\n        console.log(\"page\", page);\n        return {\n          url: `/passes/?limit=6&page=${page}`,\n        };\n      },\n      providesTags: [\"Passes\"],\n    }),\n    getPassById: builder.query({\n      query: (_id) => {\n        return {\n          url: `/passes/${_id}`,\n        };\n      },\n      providesTags: [\"Passes\"],\n      transformResponse: (response) => {\n        //  delete response.contactfound._id;\n        //  delete response.contactfound.passNumber;\n        //  delete response.contactfound.goods[0]._id;\n        //  delete response.contactfound.__v;\n        // because in joi striUnknown: true\n\n        //do poprawy- petla w goods\n        //  console.log(\"transform\", response);\n        return response.contactfound;\n      },\n    }),\n    newPass: builder.mutation({\n      query(data) {\n        const { ...body } = data;\n        return {\n          url: `/passes/add`,\n          method: \"POST\",\n          body,\n        };\n      },\n      invalidatesTags: [\"Passes\"],\n    }),\n    updatePass: builder.mutation({\n      query: ({ _id, data }) => {\n        return {\n          url: `/passes/${_id}`,\n          method: \"PUT\",\n          body: data,\n        };\n      },\n      invalidatesTags: [\"Passes\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetPassesQuery,\n  useNewPassMutation,\n  useGetPassByIdQuery,\n  useUpdatePassMutation,\n} = passesApiSlice;\n","import { useForm, FormProvider } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PassFormGoods } from \"./PassFormGoods\";\nimport css from \"./PassForm.module.css\";\nimport Joi from \"joi\";\nimport { joiResolver } from \"@hookform/resolvers/joi\";\nimport { useGetPassByIdQuery, useUpdatePassMutation } from \"./passesApiSlice\";\nimport PropTypes from \"prop-types\";\n\nexport const EditPassForm = ({ _id }) => {\n  const navigate = useNavigate();\n  const {\n    data: pass,\n    isLoading,\n    isSuccess,\n    isError,\n    error,\n    //  refetch,\n  } = useGetPassByIdQuery(_id);\n  const [updatePass] = useUpdatePassMutation(_id);\n\n  const PassSchema = Joi.object({\n    // passNumber: Joi.string().forbidden().strip(),\n    personOnPass: Joi.string().required(),\n    personOnPassCompany: Joi.string().optional(),\n    personOnPassID: Joi.string().optional(),\n    datePass: Joi.string().optional(),\n    // '2023-02-11T00:00:00.000Z' zrobic validacje bardziej szczegolowa\n    authorPass: Joi.string().required(),\n    directionOfOutflow: Joi.string().valid(\"doZakladu\", \"naZewnarz\").required(), // enum\n    originOfGoods: Joi.string().required(),\n    baseCreatingPass: Joi.string().required(),\n    canceled: Joi.boolean().optional(),\n    goods: Joi.array()\n      .min(1)\n      .items({\n        goodsName: Joi.string().required(),\n        unit: Joi.string().valid(\"KG\", \"L\", \"M2\", \"M3\", \"SZT\").required(), // enum\n        quantity: Joi.number().required(),\n        comments: Joi.string().required(),\n      })\n      .required(),\n  }).options({ stripUnknown: true });\n\n  let values = {};\n  if (isSuccess) values = pass;\n  console.log(values);\n  //delete values.passNumber; //need something smarter because passNumber is forbiden field\n\n  const methods = useForm({ values, resolver: joiResolver(PassSchema) });\n\n  if (isLoading) return <div>Loading</div>;\n  if (isError) return <div>{error.toString()}</div>;\n\n  const onSubmit = async (data) => {\n    try {\n      await updatePass({ _id, data }).unwrap();\n      //     refetch(); //for refetch passbyid, normmaly is not updated bvecouse of cache\n      navigate(\"/passes\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={methods.handleSubmit(onSubmit)}>\n        <div>\n          <input\n            className={css.formInput}\n            {...methods.register(\"personOnPass\", {})}\n            placeholder=\"Person on Pass\"\n          />\n          <span>{methods.formState.errors.personOnPass?.message}</span>\n        </div>\n        <div>\n          <input\n            className={css.formInput}\n            {...methods.register(\"personOnPassCompany\")}\n            placeholder=\"Person's company name\"\n          />\n          <span>{methods.formState.errors.personOnPassCompany?.message}</span>\n        </div>\n        <div>\n          <input\n            className={css.formInput}\n            {...methods.register(\"personOnPassID\")}\n            placeholder=\"ID numer\"\n          />\n          <span>\n            {methods.formState.errors.personOnPassCompany?.personOnPassID}\n          </span>\n        </div>\n        <div>\n          <input\n            className={css.formInput}\n            {...methods.register(\"datePass\")}\n            placeholder=\"Date Pass\"\n          />\n          <span>{methods.formState.errors.personOnPassCompany?.datePass}</span>\n        </div>\n        <div>\n          <input\n            className={css.formInput}\n            {...methods.register(\"authorPass\", {\n              required: \"  Please enter pass issuer full name \",\n            })}\n            placeholder=\"issuing passes\"\n          />\n          <span>{methods.formState.errors.authorPass?.message}</span>\n        </div>\n        <div>\n          <select\n            style={{ width: \"220px\" }}\n            {...methods.register(\"directionOfOutflow\", {\n              required: \"  Please select the direction of goods distribution\",\n            })}\n          >\n            <option value=\"\">Select directionOfOutflow</option>\n            <option value=\"doZakladu\">doZakladu</option>\n            <option value=\"naZewnarz\">naZewnarz</option>\n          </select>\n          <span>{methods.formState.errors.directionOfOutflow?.message}</span>\n        </div>\n        <div>\n          <input\n            className={css.formInput}\n            {...methods.register(\"originOfGoods\", {\n              required: \"  Please enter origin of the goods\",\n            })}\n            placeholder=\"origin of the goods\"\n          />\n          <span>{methods.formState.errors.originOfGoods?.message}</span>\n        </div>\n        <div>\n          <input\n            className={css.formInput}\n            {...methods.register(\"baseCreatingPass\", {\n              required: \"  Please enter basis for creating a pass\",\n            })}\n            placeholder=\"basis for creating a pass\"\n          />\n          <span>{methods.formState.errors.baseCreatingPass?.message}</span>\n        </div>\n        <PassFormGoods {...{ methods }} />\n        <div>\n          <button\n            type=\"button\"\n            className={css.passBtn}\n            onClick={() => methods.reset()}\n          >\n            Reset\n          </button>\n          <button type=\"submit\" className={css.passBtn}>\n            Submit\n          </button>\n        </div>\n      </form>\n    </FormProvider>\n  );\n};\n\nEditPassForm.propTypes = {\n  _id: PropTypes.string.isRequired,\n};\n","import { Helmet } from \"react-helmet\";\nimport { EditPassForm } from \"../features/passes/EditPassForm\";\nimport css from \"./NewPassPage.module.css\";\nimport { useLocation } from \"react-router-dom\";\n\nconst EditPass = () => {\n  // console.log(\"History.state after pushState: \", history.state);\n  const location = useLocation();\n  //var ID = loc.state._id;\n  //console.log(\"heh\", ID);\n  return (\n    <div className={css.main_div}>\n      <Helmet>\n        <title>Edit Pass</title>\n      </Helmet>\n      <h1>Please edit form field to update current Pass</h1>\n      <EditPassForm _id={location.state._id} />\n    </div>\n  );\n};\n\nexport default EditPass;\n","// extracted by mini-css-extract-plugin\nexport default {\"formlabel\":\"PassForm_formlabel__sGkis\",\"formInput\":\"PassForm_formInput__H2Fo2\",\"formInputGoods\":\"PassForm_formInputGoods__noqZ4\",\"passBtn\":\"PassForm_passBtn__BPU8o\"};","// extracted by mini-css-extract-plugin\nexport default {\"main_div\":\"NewPassPage_main_div__4Yi9s\"};"],"names":["PassFormGoods","_formState$errors$goo","register","formState","useFormContext","fields","append","remove","useFieldArray","name","_jsxs","children","errors","goods","_jsx","root","message","map","field","index","_formState$errors$goo2","_formState$errors$goo3","_formState$errors$goo4","_formState$errors$goo5","_formState$errors$goo6","_formState$errors$goo7","_formState$errors$goo8","_formState$errors$goo9","style","width","concat","placeholder","value","className","css","formInputGoods","passBtn","type","onClick","goodsName","unit","quantity","comments","id","amount","passesApiSlice","apiSlice","injectEndpoints","endpoints","builder","getPasses","query","page","arguments","length","undefined","console","log","url","providesTags","getPassById","_id","transformResponse","response","contactfound","newPass","mutation","data","body","method","invalidatesTags","updatePass","_ref","useGetPassesQuery","useNewPassMutation","useGetPassByIdQuery","useUpdatePassMutation","EditPassForm","_methods$formState$er","_methods$formState$er2","_methods$formState$er3","_methods$formState$er4","_methods$formState$er5","_methods$formState$er6","_methods$formState$er7","_methods$formState$er8","navigate","useNavigate","pass","isLoading","isSuccess","isError","error","PassSchema","Joi","personOnPass","required","personOnPassCompany","optional","personOnPassID","datePass","authorPass","directionOfOutflow","valid","originOfGoods","baseCreatingPass","canceled","min","items","options","stripUnknown","values","methods","useForm","resolver","joiResolver","toString","FormProvider","onSubmit","handleSubmit","async","unwrap","err","formInput","reset","EditPass","location","useLocation","main_div","Helmet","state"],"sourceRoot":""}