{"version":3,"file":"static/js/737.caaf2cd8.chunk.js","mappings":"qMAGAA,EAAAA,EAAMC,SAASC,QAAU,yCAGzB,MAAMC,EAAgBC,IACpBJ,EAAAA,EAAMC,SAASI,QAAQC,OAAOC,cAAa,UAAAC,OAAaJ,EAAO,EAYpDK,GAAWC,EAAAA,EAAAA,IACtB,iBACAC,MAAOC,EAAaC,KAClB,IACE,MAAMC,QAAYd,EAAAA,EAAMe,KAAK,gBAAiBH,GAG9C,OADAT,EAAcW,EAAIE,KAAKZ,OAChBU,EAAIE,IACb,CAAE,MAAOC,GACP,OAAOJ,EAASK,gBAAgBD,EAAME,QACxC,KC5BJ,IDoCqBT,EAAAA,EAAAA,IACnB,cACAC,MAAOC,EAAaC,KAClB,IACE,MAAMC,QAAYd,EAAAA,EAAMe,KAAK,eAAgBH,GAG7C,OADAT,EAAcW,EAAIE,KAAKZ,OAChBU,EAAIE,IACb,CAAE,MAAOC,GACP,OAAOJ,EAASK,gBAAgBD,EAAME,QACxC,MAQkBT,EAAAA,EAAAA,IAAiB,eAAeC,MAAOS,EAAGP,KAC9D,UACQb,EAAAA,EAAMe,KAAK,iBA7CnBf,EAAAA,EAAMC,SAASI,QAAQC,OAAOC,cAAgB,EAgD9C,CAAE,MAAOU,GACP,OAAOJ,EAASK,gBAAgBD,EAAME,QACxC,MAOyBT,EAAAA,EAAAA,IACzB,gBACAC,MAAOS,EAAGP,KAER,MACMQ,EADQR,EAASS,WACMC,KAAKnB,MAElC,GAAuB,OAAnBiB,EAEF,OAAOR,EAASK,gBAAgB,wBAGlC,IAEEf,EAAckB,GAEd,aADkBrB,EAAAA,EAAMwB,IAAI,mBACjBR,IACb,CAAE,MAAOC,GACP,OAAOJ,EAASK,gBAAgBD,EAAME,QACxC,KCvFsB,+BAA1B,EAAmE,+BAAnE,EAA6G,+BAA7G,EAAwJ,gC,aCGjJ,MAAMM,EAAeA,KAC1B,MAAMC,GAAWC,EAAAA,EAAAA,MAejB,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAdaC,IACnBA,EAAEC,iBACF,MAAMC,EAAOF,EAAEG,cACfP,EACEjB,EAAS,CACPyB,KAAMF,EAAKG,SAASD,KAAKE,MACzBC,MAAOL,EAAKG,SAASE,MAAMD,MAC3BE,SAAUN,EAAKG,SAASG,SAASF,SAGrCJ,EAAKO,OAAO,EAIkBC,aAAa,MAAMC,UAAWC,EAAYC,SAAA,EACtEf,EAAAA,EAAAA,MAAA,SAAOa,UAAWC,EAAaC,SAAA,CAAC,YAE9BC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOX,KAAK,OAAOO,UAAWC,QAE5Cd,EAAAA,EAAAA,MAAA,SAAOa,UAAWC,EAAaC,SAAA,CAAC,SAE9BC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,QAAQX,KAAK,QAAQO,UAAWC,QAE9Cd,EAAAA,EAAAA,MAAA,SAAOa,UAAWC,EAAaC,SAAA,CAAC,YAE9BC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,WAAWX,KAAK,WAAWO,UAAWC,QAEpDE,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASJ,UAAWC,EAAcC,SAAC,eAG3C,ECxBX,EAViBG,KAEblB,EAAAA,EAAAA,MAAA,OAAAe,SAAA,EACEC,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CAAAJ,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAETC,EAAAA,EAAAA,KAACnB,EAAY,M","sources":["redux/auth/operations.js","webpack://pass-app-frontend-js/./src/features/auth/RegisterForm.module.css?d667","features/auth/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\n\n// Utility to add JWT\nconst setAuthHeader = token => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\n// Utility to remove JWT\nconst clearAuthHeader = () => {\n  axios.defaults.headers.common.Authorization = '';\n};\n\n/*\n * POST @ /users/signup\n * body: { name, email, password }\n */\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (credentials, thunkAPI) => {\n    try {\n      const res = await axios.post('/users/signup', credentials);\n      // After successful registration, add the token to the HTTP header\n      setAuthHeader(res.data.token);\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\n/*\n * POST @ /users/login\n * body: { email, password }\n */\nexport const logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, thunkAPI) => {\n    try {\n      const res = await axios.post('/users/login', credentials);\n      // After successful login, add the token to the HTTP header\n      setAuthHeader(res.data.token);\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\n/*\n * POST @ /users/logout\n * headers: Authorization: Bearer token\n */\nexport const logOut = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\n  try {\n    await axios.post('/users/logout');\n    // After a successful logout, remove the token from the HTTP header\n    clearAuthHeader();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\n/*\n * GET @ /users/current\n * headers: Authorization: Bearer token\n */\nexport const refreshUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    // Reading the token from the state via getState()\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      // If there is no token, exit without performing any request\n      return thunkAPI.rejectWithValue('Unable to fetch user');\n    }\n\n    try {\n      // If there is a token, add it to the HTTP header and perform the request\n      setAuthHeader(persistedToken);\n      const res = await axios.get('/users/current');\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"regform\":\"RegisterForm_regform__Lkf2o\",\"reglabel\":\"RegisterForm_reglabel__6b0dz\",\"reginput\":\"RegisterForm_reginput__QgvRh\",\"regbutton\":\"RegisterForm_regbutton__8WlpW\"};","import { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport css from './RegisterForm.module.css';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\" className={css.regform}>\n      <label className={css.reglabel}>\n        Username\n        <input type=\"text\" name=\"name\" className={css.reginput} />\n      </label>\n      <label className={css.reglabel}>\n        Email\n        <input type=\"email\" name=\"email\" className={css.reginput} />\n      </label>\n      <label className={css.reglabel}>\n        Password\n        <input type=\"password\" name=\"password\" className={css.reginput} />\n      </label>\n      <button type=\"submit\" className={css.regbutton}>\n        Register\n      </button>\n    </form>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from '../features/auth/RegisterForm';\n\nconst Register = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n};\nexport default Register;\n"],"names":["axios","defaults","baseURL","setAuthHeader","token","headers","common","Authorization","concat","register","createAsyncThunk","async","credentials","thunkAPI","res","post","data","error","rejectWithValue","message","_","persistedToken","getState","auth","get","RegisterForm","dispatch","useDispatch","_jsxs","onSubmit","e","preventDefault","form","currentTarget","name","elements","value","email","password","reset","autoComplete","className","css","children","_jsx","type","Register","Helmet"],"sourceRoot":""}