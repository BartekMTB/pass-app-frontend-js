{"version":3,"file":"static/js/539.3900c91e.chunk.js","mappings":"6KAGO,MAAMA,EAAgBA,KAAO,IAADC,EACjC,MAAM,SAAEC,EAAQ,UAAEC,IAAcC,EAAAA,EAAAA,OAC1B,OAAEC,EAAM,OAAEC,EAAM,OAAEC,IAAWC,EAAAA,EAAAA,IAAc,CAC/CC,KAAM,UAGR,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGR,EAAUS,OAAOC,QAASC,EAAAA,EAAAA,KAAA,KAAAH,SAA+B,QAA/BV,EAAIE,EAAUS,OAAOC,MAAME,YAAI,IAAAd,OAAA,EAA3BA,EAA6Be,WAC5DF,EAAAA,EAAAA,KAAA,MAAAH,SACGN,EAAOY,KAAI,CAACC,EAAOC,KAAW,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC5B,OACEjB,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEG,EAAAA,EAAAA,KAAA,SACEc,MAAO,CAAEC,MAAO,YACZ3B,EAAS,SAAD4B,OAAUX,EAAK,eAC3BY,YAAY,mBAGdrB,EAAAA,EAAAA,MAAA,aAAYR,EAAS,SAAD4B,OAAUX,EAAK,UAAQR,SAAA,EACzCG,EAAAA,EAAAA,KAAA,UAAQkB,MAAM,GAAErB,SAAC,iBACjBG,EAAAA,EAAAA,KAAA,UAAQkB,MAAM,KAAIrB,SAAC,QACnBG,EAAAA,EAAAA,KAAA,UAAQkB,MAAM,IAAGrB,SAAC,OAClBG,EAAAA,EAAAA,KAAA,UAAQkB,MAAM,KAAIrB,SAAC,QACnBG,EAAAA,EAAAA,KAAA,UAAQkB,MAAM,KAAIrB,SAAC,QACnBG,EAAAA,EAAAA,KAAA,UAAQkB,MAAM,MAAKrB,SAAC,YAEtBG,EAAAA,EAAAA,KAAA,SACEc,MAAO,CAAEC,MAAO,QAChBI,UAAWC,EAAAA,EAAIC,kBACXjC,EAAS,SAAD4B,OAAUX,EAAK,cAC3BY,YAAY,cAEdjB,EAAAA,EAAAA,KAAA,SACEc,MAAO,CAAEC,MAAO,SAChBI,UAAWC,EAAAA,EAAIC,kBACXjC,EAAS,SAAD4B,OAAUX,EAAK,cAC3BY,YAAY,aAEdjB,EAAAA,EAAAA,KAAA,UACEmB,UAAWC,EAAAA,EAAIE,QACfC,KAAK,SACLC,QAASA,IAAM/B,EAAOY,GAAOR,SAC9B,WAGAR,EAAUS,OAAOC,QAChBC,EAAAA,EAAAA,KAAA,KAAAH,SAAiC,QAAjCS,EAAIjB,EAAUS,OAAOC,MAAMM,UAAM,IAAAC,GAAW,QAAXC,EAA7BD,EAA+BmB,iBAAS,IAAAlB,OAAX,EAA7BA,EAA0CL,UAE/Cb,EAAUS,OAAOC,QAChBC,EAAAA,EAAAA,KAAA,KAAAH,SAAiC,QAAjCW,EAAInB,EAAUS,OAAOC,MAAMM,UAAM,IAAAG,GAAM,QAANC,EAA7BD,EAA+BkB,YAAI,IAAAjB,OAAN,EAA7BA,EAAqCP,UAE1Cb,EAAUS,OAAOC,QAChBC,EAAAA,EAAAA,KAAA,KAAAH,SAAiC,QAAjCa,EAAIrB,EAAUS,OAAOC,MAAMM,UAAM,IAAAK,GAAU,QAAVC,EAA7BD,EAA+BiB,gBAAQ,IAAAhB,OAAV,EAA7BA,EAAyCT,UAE9Cb,EAAUS,OAAOC,QAChBC,EAAAA,EAAAA,KAAA,KAAAH,SAAiC,QAAjCe,EAAIvB,EAAUS,OAAOC,MAAMM,UAAM,IAAAO,GAAU,QAAVC,EAA7BD,EAA+BgB,gBAAQ,IAAAf,OAAV,EAA7BA,EAAyCX,YA5CxCE,EAAMyB,GA8CV,OAKX7B,EAAAA,EAAAA,KAAA,UACEmB,UAAWC,EAAAA,EAAIE,QACfC,KAAK,SACLC,QAASA,KACPhC,EAAO,CACLG,KAAM,SACNmC,OAAQ,GACR,EACFjC,SACH,iBAGG,C,8DC5EH,MAAMkC,E,QAAiBC,EAASC,gBAAgB,CACrDC,UAAYC,IAAO,CACjBC,UAAWD,EAAQE,MAAM,CACvBA,MAAO,WAAe,IAAdC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAEb,OADAG,QAAQC,IAAI,OAAQL,GACb,CACLM,IAAI,yBAAD5B,OAA2BsB,GAElC,EACAO,aAAc,CAAC,YAEjBC,YAAaX,EAAQE,MAAM,CACzBA,MAAQU,IACC,CACLH,IAAI,WAAD5B,OAAa+B,KAGpBF,aAAc,CAAC,UACfG,kBAAoBC,WACXA,EAASC,aAAaH,WACtBE,EAASC,aAAaC,kBACtBF,EAASC,aAAanD,MAAM,GAAGgD,WAC/BE,EAASC,aAAaE,IAG7BV,QAAQC,IAAI,YAAaM,GAClBA,KAGXI,QAASlB,EAAQmB,SAAS,CACxBjB,KAAAA,CAAMkB,GACJ,SAAWC,GAASD,EACpB,MAAO,CACLX,IAAI,cACJa,OAAQ,OACRD,OAEJ,EACAE,gBAAiB,CAAC,YAEpBC,WAAYxB,EAAQmB,SAAS,CAC3BjB,MAAOuB,IAAoB,IAAnB,IAAEb,EAAG,KAAEQ,GAAMK,EAMnB,MAAO,CACLhB,IAAI,WAAD5B,OAAa+B,GAChBU,OAAQ,MACRD,KAAMD,EACP,EAEHG,gBAAiB,CAAC,iBAiBX,kBACXG,EAAiB,mBACjBC,EAAkB,oBAClBC,EAAmB,sBACnBC,GACEjC,C,qJCrEG,MAAMkC,EAAWA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC5B,MAAOpB,GAAS,UAAEqB,KAAeZ,EAAAA,EAAAA,MAC3Ba,GAAWC,EAAAA,EAAAA,MAEXC,EAAaC,IAAAA,OAAW,CAC5B3B,WAAY2B,IAAAA,SAAaC,YACzBC,aAAcF,IAAAA,SAAaG,WAC3BC,oBAAqBJ,IAAAA,SAAaK,WAClCC,eAAgBN,IAAAA,SAAaK,WAC7BE,SAAUP,IAAAA,SAAaK,WAEvBG,WAAYR,IAAAA,SAAaG,WACzBM,mBAAoBT,IAAAA,SAAaU,MAAM,YAAa,aAAaP,WACjEQ,cAAeX,IAAAA,SAAaG,WAC5BS,iBAAkBZ,IAAAA,SAAaG,WAC/BU,SAAUb,IAAAA,UAAcK,WACxBpF,MAAO+E,IAAAA,QACJc,IAAI,GACJC,MAAM,CACLpE,UAAWqD,IAAAA,SAAaG,WACxBvD,KAAMoD,IAAAA,SAAaU,MAAM,KAAM,IAAK,KAAM,KAAM,OAAOP,WACvDtD,SAAUmD,IAAAA,SAAaG,WACvBrD,SAAUkD,IAAAA,SAAaG,aAExBA,aAiCCa,GAAUC,EAAAA,EAAAA,IAAQ,CACtBC,cA/BoB,CACpBhB,aAAc,OACdE,oBAAqB,kBACrBE,eAAgB,UAChBC,SAAU,aACVC,WAAY,cACZC,mBAAoB,YACpBE,cAAe,kBACfC,iBAAkB,iCAClBC,UAAU,EACV5F,MAAO,CACL,CACE0B,UAAW,aACXC,KAAM,KACNC,SAAU,MACVC,SAAU,sBAiBdqE,UAAUC,EAAAA,EAAAA,GAAYrB,KAgBxB,OACE7E,EAAAA,EAAAA,KAACmG,EAAAA,GAAY,IAAKL,EAAOjG,UACvBD,EAAAA,EAAAA,MAAA,QAAMwG,SAAUN,EAAQO,cAdXC,UACf5D,QAAQC,IAAI+B,GACZ,IACE,MAAM6B,QAAoBlD,EAAQE,GAAMiD,SACxC9D,QAAQC,IAAI4D,GACZ7D,QAAQC,IAAI+B,GACZC,EAAS,UACX,CAAE,MAAO8B,GACP/D,QAAQC,IAAI8D,EACd,KAKiD5G,SAAA,EAC7CD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEG,EAAAA,EAAAA,KAAA,SACEmB,UAAWC,EAAAA,EAAIsF,aACXZ,EAAQ1G,SAAS,eAAgB,CAAC,GACtC6B,YAAY,oBAEdjB,EAAAA,EAAAA,KAAA,QAAAH,SAA4C,QAA5CqE,EAAO4B,EAAQzG,UAAUS,OAAOkF,oBAAY,IAAAd,OAAA,EAArCA,EAAuChE,cAEhDN,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEG,EAAAA,EAAAA,KAAA,SACEmB,UAAWC,EAAAA,EAAIsF,aACXZ,EAAQ1G,SAAS,uBACrB6B,YAAY,2BAEdjB,EAAAA,EAAAA,KAAA,QAAAH,SAAmD,QAAnDsE,EAAO2B,EAAQzG,UAAUS,OAAOoF,2BAAmB,IAAAf,OAAA,EAA5CA,EAA8CjE,cAEvDN,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEG,EAAAA,EAAAA,KAAA,SACEmB,UAAWC,EAAAA,EAAIsF,aACXZ,EAAQ1G,SAAS,kBACrB6B,YAAY,cAEdjB,EAAAA,EAAAA,KAAA,QAAAH,SAC+C,QAD/CuE,EACG0B,EAAQzG,UAAUS,OAAOoF,2BAAmB,IAAAd,OAAA,EAA5CA,EAA8CgB,qBAGnDxF,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEG,EAAAA,EAAAA,KAAA,SACEmB,UAAWC,EAAAA,EAAIsF,aACXZ,EAAQ1G,SAAS,YACrB6B,YAAY,eAEdjB,EAAAA,EAAAA,KAAA,QAAAH,SAAmD,QAAnDwE,EAAOyB,EAAQzG,UAAUS,OAAOoF,2BAAmB,IAAAb,OAAA,EAA5CA,EAA8CgB,eAEvDzF,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEG,EAAAA,EAAAA,KAAA,SACEmB,UAAWC,EAAAA,EAAIsF,aACXZ,EAAQ1G,SAAS,aAAc,CACjC6F,SAAU,0CAEZhE,YAAY,oBAEdjB,EAAAA,EAAAA,KAAA,QAAAH,SAA0C,QAA1CyE,EAAOwB,EAAQzG,UAAUS,OAAOwF,kBAAU,IAAAhB,OAAA,EAAnCA,EAAqCpE,cAE9CN,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,UACEkB,MAAO,CAAEC,MAAO,YACZ+E,EAAQ1G,SAAS,qBAAsB,CACzC6F,SAAU,wDACVpF,SAAA,EAEFG,EAAAA,EAAAA,KAAA,UAAQkB,MAAM,GAAErB,SAAC,+BACjBG,EAAAA,EAAAA,KAAA,UAAQkB,MAAM,YAAWrB,SAAC,eAC1BG,EAAAA,EAAAA,KAAA,UAAQkB,MAAM,YAAWrB,SAAC,kBAE5BG,EAAAA,EAAAA,KAAA,QAAAH,SAAkD,QAAlD0E,EAAOuB,EAAQzG,UAAUS,OAAOyF,0BAAkB,IAAAhB,OAAA,EAA3CA,EAA6CrE,cAEtDN,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEG,EAAAA,EAAAA,KAAA,SACEmB,UAAWC,EAAAA,EAAIsF,aACXZ,EAAQ1G,SAAS,gBAAiB,CACpC6F,SAAU,uCAEZhE,YAAY,yBAEdjB,EAAAA,EAAAA,KAAA,QAAAH,SAA6C,QAA7C2E,EAAOsB,EAAQzG,UAAUS,OAAO2F,qBAAa,IAAAjB,OAAA,EAAtCA,EAAwCtE,cAEjDN,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEG,EAAAA,EAAAA,KAAA,SACEmB,UAAWC,EAAAA,EAAIsF,aACXZ,EAAQ1G,SAAS,mBAAoB,CACvC6F,SAAU,6CAEZhE,YAAY,+BAEdjB,EAAAA,EAAAA,KAAA,QAAAH,SAAgD,QAAhD4E,EAAOqB,EAAQzG,UAAUS,OAAO4F,wBAAgB,IAAAjB,OAAA,EAAzCA,EAA2CvE,cAEpDF,EAAAA,EAAAA,KAACd,EAAAA,EAAa,CAAO4G,aACrBlG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEG,EAAAA,EAAAA,KAAA,UACEuB,KAAK,SACLJ,UAAWC,EAAAA,EAAIE,QACfE,QAASA,IAAMsE,EAAQa,QAAQ9G,SAChC,WAGDG,EAAAA,EAAAA,KAAA,UAAQuB,KAAK,SAASJ,UAAWC,EAAAA,EAAIE,QAAQzB,SAAC,kBAKrC,E,cC7KnB,MAYA,EAZgB+G,KAEZhH,EAAAA,EAAAA,MAAA,OAAKuB,UAAWC,EAAAA,EAAIyF,SAAShH,SAAA,EAC3BG,EAAAA,EAAAA,KAAC8G,EAAAA,EAAM,CAAAjH,UACLG,EAAAA,EAAAA,KAAA,SAAAH,SAAO,gBAETG,EAAAA,EAAAA,KAAA,MAAAH,SAAI,mDACJG,EAAAA,EAAAA,KAACiE,EAAQ,M,kCCVf,SAAgB,UAAY,4BAA4B,UAAY,4BAA4B,eAAiB,iCAAiC,QAAU,0B,kCCA5J,SAAgB,SAAW,8B","sources":["features/passes/PassFormGoods.jsx","features/passes/passesApiSlice.js","features/passes/PassForm.jsx","pages/NewPassPage.jsx","webpack://pass-app-frontend-js/./src/features/passes/PassForm.module.css?3a83","webpack://pass-app-frontend-js/./src/pages/NewPassPage.module.css?f7a1"],"sourcesContent":["import { useFieldArray, useFormContext } from \"react-hook-form\";\nimport css from \"./PassForm.module.css\";\n\nexport const PassFormGoods = () => {\n  const { register, formState } = useFormContext();\n  const { fields, append, remove } = useFieldArray({\n    name: \"goods\",\n  });\n\n  return (\n    <div>\n      {formState.errors.goods && <p>{formState.errors.goods.root?.message}</p>}\n      <ul>\n        {fields.map((field, index) => {\n          return (\n            <li key={field.id}>\n              <input\n                style={{ width: \"180px\" }}\n                {...register(`goods.${index}.goodsName`)}\n                placeholder=\"Products name\"\n              />\n\n              <select {...register(`goods.${index}.unit`)}>\n                <option value=\"\">Select unit</option>\n                <option value=\"KG\">KG</option>\n                <option value=\"L\">L</option>\n                <option value=\"M2\">M2</option>\n                <option value=\"M3\">M3</option>\n                <option value=\"SZT\">SZT</option>\n              </select>\n              <input\n                style={{ width: \"55px\" }}\n                className={css.formInputGoods}\n                {...register(`goods.${index}.quantity`)}\n                placeholder=\"Quantity\"\n              />\n              <input\n                style={{ width: \"210px\" }}\n                className={css.formInputGoods}\n                {...register(`goods.${index}.comments`)}\n                placeholder=\"Comment\"\n              />\n              <button\n                className={css.passBtn}\n                type=\"button\"\n                onClick={() => remove(index)}\n              >\n                Delete\n              </button>\n              {formState.errors.goods && (\n                <p>{formState.errors.goods[index]?.goodsName?.message}</p>\n              )}\n              {formState.errors.goods && (\n                <p>{formState.errors.goods[index]?.unit?.message}</p>\n              )}\n              {formState.errors.goods && (\n                <p>{formState.errors.goods[index]?.quantity?.message}</p>\n              )}\n              {formState.errors.goods && (\n                <p>{formState.errors.goods[index]?.comments?.message}</p>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n\n      <button\n        className={css.passBtn}\n        type=\"button\"\n        onClick={() => {\n          append({\n            name: \"append\",\n            amount: 0,\n          });\n        }}\n      >\n        add a line\n      </button>\n    </div>\n  );\n};\n/* {Array.isArray(formState.errors.goods) ? (\n  <span>{formState.errors.goods[index].goodaName?.message}</span>\n) : null} */\n","import { apiSlice } from \"../../app/apiSlice\";\n\nexport const passesApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    getPasses: builder.query({\n      query: (page = 1) => {\n        console.log(\"page\", page);\n        return {\n          url: `/passes/?limit=6&page=${page}`,\n        };\n      },\n      providesTags: [\"Passes\"],\n    }),\n    getPassById: builder.query({\n      query: (_id) => {\n        return {\n          url: `/passes/${_id}`,\n        };\n      },\n      providesTags: [\"Passes\"],\n      transformResponse: (response) => {\n        delete response.contactfound._id;\n        delete response.contactfound.passNumber;\n        delete response.contactfound.goods[0]._id;\n        delete response.contactfound.__v;\n\n        //do poprawy- petla w goods\n        console.log(\"transform\", response);\n        return response;\n      },\n    }),\n    newPass: builder.mutation({\n      query(data) {\n        const { ...body } = data;\n        return {\n          url: `/passes/add`,\n          method: \"POST\",\n          body,\n        };\n      },\n      invalidatesTags: [\"Passes\"],\n    }),\n    updatePass: builder.mutation({\n      query: ({ _id, data }) => {\n        // const { _id, ...pass } = data;\n        //   const { ...body } = pass;\n        //  console.log(\"_id \", _id);\n        ///console.log(\"data \", data);\n\n        return {\n          url: `/passes/${_id}`,\n          method: \"PUT\",\n          body: data,\n        };\n      },\n      invalidatesTags: [\"Passes\"],\n      /*  async onQueryStarted({ _id, ...data }, { dispatch, queryFulfilled }) {\n        const patchResult = dispatch(\n          apiSlice.util.updateQueryData(\"getPassById\", _id, (draft) => {\n            Object.assign(draft, data);\n          })\n        );\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n        }\n      }, */\n    }),\n  }),\n});\n\nexport const {\n  useGetPassesQuery,\n  useNewPassMutation,\n  useGetPassByIdQuery,\n  useUpdatePassMutation,\n} = passesApiSlice;\n\n/* query({ _id, data }) {\n  // const { _id, ...pass } = data;\n  //   const { ...body } = pass;\n  console.log(\"_id \", _id);\n  console.log(\"data \", data);\n\n  return {\n    url: `/passes/${_id}`,\n    method: \"PUT\",\n    data,\n  };\n}, */\n","import { useForm, FormProvider } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PassFormGoods } from \"./PassFormGoods\";\nimport css from \"./PassForm.module.css\";\nimport Joi from \"joi\";\nimport { joiResolver } from \"@hookform/resolvers/joi\";\nimport { useNewPassMutation } from \"./passesApiSlice\";\n\nexport const PassForm = () => {\n  const [newPass, { isLoading }] = useNewPassMutation();\n  const navigate = useNavigate();\n\n  const PassSchema = Joi.object({\n    passNumber: Joi.string().forbidden(),\n    personOnPass: Joi.string().required(),\n    personOnPassCompany: Joi.string().optional(),\n    personOnPassID: Joi.string().optional(),\n    datePass: Joi.string().optional(),\n    // '2023-02-11T00:00:00.000Z' zrobic validacje bardziej szczegolowa\n    authorPass: Joi.string().required(),\n    directionOfOutflow: Joi.string().valid(\"doZakladu\", \"naZewnarz\").required(), // enum\n    originOfGoods: Joi.string().required(),\n    baseCreatingPass: Joi.string().required(),\n    canceled: Joi.boolean().optional(),\n    goods: Joi.array()\n      .min(1)\n      .items({\n        goodsName: Joi.string().required(),\n        unit: Joi.string().valid(\"KG\", \"L\", \"M2\", \"M3\", \"SZT\").required(), // enum\n        quantity: Joi.number().required(),\n        comments: Joi.string().required(),\n      })\n      .required(),\n  });\n\n  const defaultValues = {\n    personOnPass: \"John\",\n    personOnPassCompany: \"Example Company\",\n    personOnPassID: \"FK 3232\",\n    datePass: \"2024-02-11\",\n    authorPass: \"Pan Dariusz\",\n    directionOfOutflow: \"doZakladu\",\n    originOfGoods: \"Produkcja odpad\",\n    baseCreatingPass: \"przekazanie odpadu, utylizacja\",\n    canceled: false,\n    goods: [\n      {\n        goodsName: \"Makulatura\",\n        unit: \"KG\",\n        quantity: \"500\",\n        comments: \"mutylizacja opon\",\n      },\n    ],\n  };\n\n  /* const defaultValues = {\n    goods: [\n      {\n        goodaName: \"\",\n        unit: \"\",\n        quantity: \"\",\n        comments: \"\",\n      },\n    ],\n  }; */\n  const methods = useForm({\n    defaultValues,\n    resolver: joiResolver(PassSchema),\n  });\n  //console.log(methods);\n\n  const onSubmit = async (data) => {\n    console.log(isLoading);\n    try {\n      const newPassBody = await newPass(data).unwrap();\n      console.log(newPassBody);\n      console.log(isLoading);\n      navigate(\"/passes\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={methods.handleSubmit(onSubmit)}>\n        <div>\n          <input\n            className={css.formInput}\n            {...methods.register(\"personOnPass\", {})}\n            placeholder=\"Person on Pass\"\n          />\n          <span>{methods.formState.errors.personOnPass?.message}</span>\n        </div>\n        <div>\n          <input\n            className={css.formInput}\n            {...methods.register(\"personOnPassCompany\")}\n            placeholder=\"Person's company name\"\n          />\n          <span>{methods.formState.errors.personOnPassCompany?.message}</span>\n        </div>\n        <div>\n          <input\n            className={css.formInput}\n            {...methods.register(\"personOnPassID\")}\n            placeholder=\"ID numer\"\n          />\n          <span>\n            {methods.formState.errors.personOnPassCompany?.personOnPassID}\n          </span>\n        </div>\n        <div>\n          <input\n            className={css.formInput}\n            {...methods.register(\"datePass\")}\n            placeholder=\"Date Pass\"\n          />\n          <span>{methods.formState.errors.personOnPassCompany?.datePass}</span>\n        </div>\n        <div>\n          <input\n            className={css.formInput}\n            {...methods.register(\"authorPass\", {\n              required: \"  Please enter pass issuer full name \",\n            })}\n            placeholder=\"issuing passes\"\n          />\n          <span>{methods.formState.errors.authorPass?.message}</span>\n        </div>\n        <div>\n          <select\n            style={{ width: \"220px\" }}\n            {...methods.register(\"directionOfOutflow\", {\n              required: \"  Please select the direction of goods distribution\",\n            })}\n          >\n            <option value=\"\">Select directionOfOutflow</option>\n            <option value=\"doZakladu\">doZakladu</option>\n            <option value=\"naZewnarz\">naZewnarz</option>\n          </select>\n          <span>{methods.formState.errors.directionOfOutflow?.message}</span>\n        </div>\n        <div>\n          <input\n            className={css.formInput}\n            {...methods.register(\"originOfGoods\", {\n              required: \"  Please enter origin of the goods\",\n            })}\n            placeholder=\"origin of the goods\"\n          />\n          <span>{methods.formState.errors.originOfGoods?.message}</span>\n        </div>\n        <div>\n          <input\n            className={css.formInput}\n            {...methods.register(\"baseCreatingPass\", {\n              required: \"  Please enter basis for creating a pass\",\n            })}\n            placeholder=\"basis for creating a pass\"\n          />\n          <span>{methods.formState.errors.baseCreatingPass?.message}</span>\n        </div>\n        <PassFormGoods {...{ methods }} />\n        <div>\n          <button\n            type=\"button\"\n            className={css.passBtn}\n            onClick={() => methods.reset()}\n          >\n            Reset\n          </button>\n          <button type=\"submit\" className={css.passBtn}>\n            Submit\n          </button>\n        </div>\n      </form>\n    </FormProvider>\n  );\n};\n","import { Helmet } from \"react-helmet\";\nimport { PassForm } from \"../features/passes/PassForm\";\nimport css from \"./NewPassPage.module.css\";\n\nconst NewPass = () => {\n  return (\n    <div className={css.main_div}>\n      <Helmet>\n        <title>New Pass</title>\n      </Helmet>\n      <h1>Please fill out the form to create a new Pass</h1>\n      <PassForm />\n    </div>\n  );\n};\n\nexport default NewPass;\n","// extracted by mini-css-extract-plugin\nexport default {\"formlabel\":\"PassForm_formlabel__sGkis\",\"formInput\":\"PassForm_formInput__H2Fo2\",\"formInputGoods\":\"PassForm_formInputGoods__noqZ4\",\"passBtn\":\"PassForm_passBtn__BPU8o\"};","// extracted by mini-css-extract-plugin\nexport default {\"main_div\":\"NewPassPage_main_div__4Yi9s\"};"],"names":["PassFormGoods","_formState$errors$goo","register","formState","useFormContext","fields","append","remove","useFieldArray","name","_jsxs","children","errors","goods","_jsx","root","message","map","field","index","_formState$errors$goo2","_formState$errors$goo3","_formState$errors$goo4","_formState$errors$goo5","_formState$errors$goo6","_formState$errors$goo7","_formState$errors$goo8","_formState$errors$goo9","style","width","concat","placeholder","value","className","css","formInputGoods","passBtn","type","onClick","goodsName","unit","quantity","comments","id","amount","passesApiSlice","apiSlice","injectEndpoints","endpoints","builder","getPasses","query","page","arguments","length","undefined","console","log","url","providesTags","getPassById","_id","transformResponse","response","contactfound","passNumber","__v","newPass","mutation","data","body","method","invalidatesTags","updatePass","_ref","useGetPassesQuery","useNewPassMutation","useGetPassByIdQuery","useUpdatePassMutation","PassForm","_methods$formState$er","_methods$formState$er2","_methods$formState$er3","_methods$formState$er4","_methods$formState$er5","_methods$formState$er6","_methods$formState$er7","_methods$formState$er8","isLoading","navigate","useNavigate","PassSchema","Joi","forbidden","personOnPass","required","personOnPassCompany","optional","personOnPassID","datePass","authorPass","directionOfOutflow","valid","originOfGoods","baseCreatingPass","canceled","min","items","methods","useForm","defaultValues","resolver","joiResolver","FormProvider","onSubmit","handleSubmit","async","newPassBody","unwrap","err","formInput","reset","NewPass","main_div","Helmet"],"sourceRoot":""}